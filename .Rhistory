state_ful <- recode(
midwest$state,
IL = "Illinois",
IN = "Indiana",
MI = "Michigan",
OH = "Ohio",
WI = "Wisconsin"
)
)
midwest$state
recode(
midwest$state,
IL = "Illinois",
IN = "Indiana",
MI = "Michigan",
OH = "Ohio",
WI = "Wisconsin"
)
midwest$state
midwest %>%
group_by(state) %>%
summarize(tot_pop = sum(poptotal)) %>%
ggplot(aes(x = state, y = tot_pop)) +
geom_col() +
ylab("Total Population") +
xlab("State") +
theme_bw()
?replicate()
replicate(1,2,3,3,4)
a = c(1,2,3,3)
class(a)
type(a)
as.vector(a)
a
replicate(a)
duplicated(a)
T %in% duplicated(a)
midwest %>%
filter(poptotal > quantile(poptotal, probs = 0.1)) %>%
ggplot(aes(x = popdensity, y = percollege)) +
geom_point(aes(color = state)) +
geom_smooth(
se = F,
method = lm,
color = "black",
linetype = "dotted"
) +
scale_x_log10() +
scale_y_log10()
midwest %>%
filter(poptotal > quantile(poptotal, probs = 0.1)) %>%
ggplot(aes(x = popdensity, y = percollege)) +
geom_point(aes(color = state)) +
geom_smooth(
se = F,
method = lm,
color = "black",
linetype = "dotted"
) +
scale_x_log10() +
scale_y_log10()
case1302 %>%
group_by(Company, Treat) %>%
summarize(avg_scor = mean(Score, na.rm = T), n = n()) -> Meanscore1
ggplot(Meanscore1,
aes(
x = Company,
y = avg_scor,
color = Treat,
size = as.factor(n)
)) +
geom_point() +
theme_bw() +
scale_color_colorblind() +
ylab("Mean Score") +
labs(size = "Number of Observations", color = "Treatment")
library(ggthemes)
case1302 %>%
group_by(Company, Treat) %>%
summarize(avg_scor = mean(Score, na.rm = T), n = n()) -> Meanscore1
ggplot(Meanscore1,
aes(
x = Company,
y = avg_scor,
color = Treat,
size = as.factor(n)
)) +
geom_point() +
theme_bw() +
scale_color_colorblind() +
ylab("Mean Score") +
labs(size = "Number of Observations", color = "Treatment")
score2(c(1, 2, 3), c(3, 4))
score2 <- function(a,b){
stopifnot(is.numeric(a), is.numeric(b))
stopifnot(T %in% duplicated(a), T %in% duplicated(b))
}
score2(c(1, 2, 3), c(3, 4))
score2 <- function(a,b){
stopifnot(is.numeric(a))
stopifnot(is.numeric(b))
stopifnot(T %in% duplicated(a))
stopifnot(T %in% duplicated(b))
}
score2(c(1, 2, 3), c(3, 4))
score2 <- function(a,b){
stopifnot(is.numeric(a))
stopifnot(is.numeric(b))
stopifnot(T %in% duplicated(a))
stopifnot(T %in% duplicated(b))
}
score2(c(1, 2, 3,3), c(3, 44))
score2 <- function(a,b){
stopifnot(is.numeric(a))
stopifnot(is.numeric(b))
stopifnot(T %in% duplicated(a))
stopifnot(T %in% duplicated(b))
}
score2(c(1, 2, 3,3), c(3, 4))
case1302 %>%
group_by(Company, Treat) %>%
summarize(avg_scor = mean(Score, na.rm = T), n = n()) -> Meanscore1
ggplot(Meanscore1,
aes(
x = Company,
y = avg_scor,
color = Treat,
size = as.factor(n)
)) +
geom_point() +
theme_bw() +
scale_color_colorblind() +
ylab("Mean Score") +
labs(size = "Number of Observations", color = "Treatment")
midwest %>%
group_by(state) %>%
mutate(per_adults = (popadults / poptotal), n = n()) %>%
ggplot(aes(x = state, y = per_adults)) +
geom_boxplot() +
theme_bw() +
ylab("Percentage of Adults")
score2 <- function(a,b){
stopifnot(is.numeric(a))
stopifnot(is.numeric(b))
stopifnot(length(a) != length(unique(a)))
stopifnot(length(b) != length(unique(b)))
if(a %in% b){
}else if(b %in% a){
}
}
score2(c(1, 2, 3,3), c(3, 4))
score2 <- function(a,b){
stopifnot(is.numeric(a))
stopifnot(is.numeric(b))
if(length(a) != length(unique(a))){
stop("a has repeated values")
}else if(length(b) != length(unique(b))){
stop("b has repeated values")
}
}
score2(c(1, 2, 3,3), c(3, 4))
score2 <- function(a,b){
stopifnot(is.numeric(a))
stopifnot(is.numeric(b))
if(length(a) != length(unique(a))){
stop("a has repeated values")
}else if(length(b) != length(unique(b))){
stop("b has repeated values")
}
return(sum(!(a%in%b)) - sum(!(b%in%a)))
}
score2(c(1, 2, 3,4), c(3, 4))
score2 <- function(a,b){
stopifnot(is.numeric(a))
stopifnot(is.numeric(b))
if(length(a) != length(unique(a))){
stop("a has repeated values")
}else if(length(b) != length(unique(b))){
stop("b has repeated values")
}
return(sum(!(a%in%b)) - sum(!(b%in%a)))
}
score2(c(1, 2, 3), c(3, 4))
score2 <- function(a,b){
stopifnot(is.numeric(a))
stopifnot(is.numeric(b))
if(length(a) != length(unique(a))){
stop("a has repeated values")
}else if(length(b) != length(unique(b))){
stop("b has repeated values")
}
return(sum(!(a%in%b)) - sum(!(b%in%a)))
}
score2(c(1, 2, 3), c(3, 4))
score2(c(1, 2, 3), c(1, 2, 3, 4))
score2(c(1, 2, 3), c(1, 2, 3, 4))
score2 <- function(a,b){
stopifnot(is.numeric(a))
stopifnot(is.numeric(b))
if(length(a) != length(unique(a))){
stop("a has repeated values")
}else if(length(b) != length(unique(b))){
stop("b has repeated values")
}
return(sum(!(a%in%b)) - sum(!(b%in%a)))
}
score2(c(1, 2, 3), c(3, 4))
score2(c(1, 2, 3), c(1, 2, 3, 4))
score2(c(1, 2, 3), c(1, 2, 3, 4))
score2 <- function(a,b){
stopifnot(is.numeric(a))
stopifnot(is.numeric(b))
if(length(a) != length(unique(a))){
stop("a has repeated values")
}else if(length(b) != length(unique(b))){
stop("b has repeated values")
}
return(sum(!(a%in%b)) - sum(!(b%in%a)))
}
score2(c(1, 2, 3), c(3, 4))
score2(c(1, 2, 3), c(1, 2, 3, 4))
score2(c(1, 2, 3), c(3, 4, 4))
library(Sleuth3)
library(tidyverse)
library(ggplot2)
library(dplyr)
library(ggthemes)
data("case1302")
head(case1302)
view(case1302)
score2 <- function(a,b){
stopifnot(is.numeric(a))
stopifnot(is.numeric(b))
if(length(a) != length(unique(a))){
stop("a has some repeated values")
}else if(length(b) != length(unique(b))){
stop("b has some repeated values")
}
return(sum(!(a%in%b)) - sum(!(b%in%a)))
}
score2(c(1, 2, 3), c(3, 4))
score2(c(1, 2, 3), c(1, 2, 3, 4))
score2(c(1, 2, 3), c(3, 4, 4))
recode(
midwest$state,
IL = "Illinois",
IN = "Indiana",
MI = "Michigan",
OH = "Ohio",
WI = "Wisconsin"
)
midwest$state
recode(
midwest$state,
IL = "Illinois",
IN = "Indiana",
MI = "Michigan",
OH = "Ohio",
WI = "Wisconsin"
) -> state_fullll
recode(
midwest$state,
IL = "Illinois",
IN = "Indiana",
MI = "Michigan",
OH = "Ohio",
WI = "Wisconsin"
) -> state_fullll
state_fullll
recode(
midwest$state,
IL = "Illinois",
IN = "Indiana",
MI = "Michigan",
OH = "Ohio",
WI = "Wisconsin"
) -> state_fullll
state_fullll
midwest %>%
mutate(state_fulll <- recode(state, IL = "Illinois", IN = "Indiana", MI = "Michigan",
OH = "Ohio", WI = "Wisconsin"))
midwest %>%
mutate(statename_ful <- recode(state, IL = "Illinois", IN = "Indiana", MI = "Michigan",
OH = "Ohio", WI = "Wisconsin"))
midwest %>%
mutate(recode(state, IL = "Illinois", IN = "Indiana", MI = "Michigan",
OH = "Ohio", WI = "Wisconsin"))
midwest %>%
mutate(state <- recode(state, IL = "Illinois", IN = "Indiana", MI = "Michigan",
OH = "Ohio", WI = "Wisconsin"))
midwest %>%
recode(state, IL = "Illinois", IN = "Indiana", MI = "Michigan",
OH = "Ohio", WI = "Wisconsin")
midwest %>%
mutate(recode(state, IL = "Illinois", IN = "Indiana", MI = "Michigan",
OH = "Ohio", WI = "Wisconsin"))
len_sum <- function(x) {
stopifnot(is.numeric(x))
if (length(x) %% 2 == 0) {
return(sum(x, na.rm = T))
} else{
return(sum(x[x %% 2 == 0], na.rm = T))
}
}
len_sum(c(1, 2, 3, NA))
len_sum(c(1, 2, 3))
len_sum(c(2, 3, 4, 5, 6))
len_sum(c(2, 3, 4, 5, NA))
len_sum(c(2, 3, 4, NA, 6))
library(Sleuth3)
suppressMessages(library(tidyverse))
library(ggplot2)
library(dplyr)
library(ggthemes)
data("case1302")
head(case1302)
view(case1302)
midwest
midwest %>%
mutate(recode(state, IL = "Illinois", IN = "Indiana", MI = "Michigan",
OH = "Ohio", WI = "Wisconsin"))
midwest %>%
mutate(new = recode(state, IL = "Illinois", IN = "Indiana", MI = "Michigan",
OH = "Ohio", WI = "Wisconsin"))
midwest %>%
mutate(new_state = recode(state, IL = "Illinois", IN = "Indiana", MI = "Michigan",
OH = "Ohio", WI = "Wisconsin"))
midwest %>%
mutate(new_state = recode(state, IL = "Illinois", IN = "Indiana", MI = "Michigan",
OH = "Ohio", WI = "Wisconsin")) %>%
select(1, 2, 3, 29, 4:28)
midwest %>%
mutate(new_state = recode(state, IL = "Illinois", IN = "Indiana", MI = "Michigan",
OH = "Ohio", WI = "Wisconsin")) %>%
select(1, 2, 29, 4:28)
midwest %>%
mutate(new_state = recode(state, IL = "Illinois", IN = "Indiana", MI = "Michigan",
OH = "Ohio", WI = "Wisconsin")) %>%
select(1, 2, 29, 4:28)
head(midwest)
midwest %>%
mutate(new_state = recode(state, IL = "Illinois", IN = "Indiana", MI = "Michigan",
OH = "Ohio", WI = "Wisconsin")) %>%
select(1, 2, 29, 4:28) %>%
head()
midwest %>%
mutate(state = recode(state, IL = "Illinois", IN = "Indiana", MI = "Michigan",
OH = "Ohio", WI = "Wisconsin")) %>%
select(1, 2, 29, 4:28) %>%
head()
midwest %>%
mutate(new_state = recode(state, IL = "Illinois", IN = "Indiana", MI = "Michigan",
OH = "Ohio", WI = "Wisconsin")) %>%
select(1, 2, 29, 4:28) %>%
head()
library(Sleuth3)
suppressMessages(library(tidyverse))
library(ggplot2)
library(dplyr)
library(ggthemes)
data("case1302")
head(case1302)
view(case1302)
library(Sleuth3)
suppressMessages(library(tidyverse))
library(ggplot2)
library(dplyr)
library(ggthemes)
data("case1302")
head(case1302)
midwest %>%
mutate(new_state = recode(state, IL = "Illinois", IN = "Indiana", MI = "Michigan",
OH = "Ohio", WI = "Wisconsin")) %>%
select(1, 2, 29, 4:28) %>%
head()
len_sum <- function(x) {
stopifnot(is.numeric(x))
if (length(x) %% 2 == 0) {
return(sum(x, na.rm = T))
} else{
return(sum(x[x %% 2 == 0], na.rm = T))
}
}
len_sum(c(1, 2, 3, NA))
len_sum(c(1, 2, 3))
len_sum(c(2, 3, 4, 5, 6))
len_sum(c(2, 3, 4, 5, NA))
len_sum(c(2, 3, 4, NA, 6))
library(Sleuth3)
suppressMessages(library(tidyverse))
library(ggplot2)
library(dplyr)
library(ggthemes)
data("case1302")
head(case1302)
view(case1302)
data("midwest")
view(midwest)
len_sum <- function(x) {
stopifnot(is.numeric(x))
if (length(x) %% 2 == 0) {
return(sum(x, na.rm = T))
} else{
return(sum(x[x %% 2 == 0], na.rm = T))
}
}
len_sum(c(1, 2, 3, NA))
len_sum(c(1, 2, 3))
len_sum(c(2, 3, 4, 5, 6))
len_sum(c(2, 3, 4, 5, NA))
len_sum(c(2, 3, 4, NA, 6))
len_sum <- function(x) {
stopifnot(is.numeric(x))
if (length(x) %% 2 == 0) {
return(sum(x, na.rm = T))
} else{
return(sum(x[x %% 2 == 0], na.rm = T))
}
}
len_sum(c(1, 2, 3, NA))
len_sum(c(1, 2, 3))
len_sum(c(2, 3, 4, 5, 6))
len_sum(c(2, 3, 4, 5, NA))
len_sum(c(2, 3, 4, NA, 6))
leap_year <- function(yr) {
stopifnot(is.numeric(yr))
if (yr %% 4 == 0) {
if (yr %% 100 == 0 & yr %% 400 != 0) {
return(F)
} else{
return(T)
}
} else{
return(F)
}
}
leap_year(2)
leap_year(12)
leap_year(200)
leap_year(800)
score2 <- function(a,b){
stopifnot(is.numeric(a))
stopifnot(is.numeric(b))
if(length(a) != length(unique(a))){
stop("a has some repeated values")
}else if(length(b) != length(unique(b))){
stop("b has some repeated values")
}
return(sum(!(a%in%b)) - sum(!(b%in%a)))
}
score2(c(1, 2, 3), c(3, 4))
score2(c(1, 2, 3), c(1, 2, 3, 4))
score2(c(1, 2, 3), c(3, 4, 4))
case1302 %>%
group_by(Company, Treat) %>%
summarize(avg_scor = mean(Score, na.rm = T)) -> Meanscore1
library(Sleuth3)
suppressMessages(library(tidyverse))
library(ggplot2)
library(dplyr)
library(ggthemes)
data("case1302")
head(case1302)
case1302 %>%
group_by(Company, Treat) %>%
summarize(avg_scor = mean(Score, na.rm = T)) -> Meanscore1
suppressMessages(library(tidyverse))
suppressMessages(library(foreign))
crime_data_set <- read.spss("./Crime.sav", to.data.frame=TRUE)
crime_data_set
crime_data_set
predict_crime_outcome <- lm(murder ~ highschool + poverty, crime_data_set)
coefficients(predict_crime_outcome)
coefficients(predict_crime_outcome)
install.packages(c("backports", "boot", "broom", "callr", "class", "cli", "crosstalk", "data.table", "dbplyr", "digest", "dplyr", "ellipsis", "forcats", "fs", "fueleconomy", "ggplot2", "ggspatial", "glue", "haven", "hexbin", "htmltools", "httpuv", "httr", "jsonlite", "KernSmooth", "knitr", "Lahman", "later", "lattice", "lifecycle", "lubridate", "lwgeom", "MASS", "mgcv", "mime", "modelr", "nlme", "nnet", "openssl", "pillar", "pkgbuild", "pkgload", "plotly", "plyr", "prettyunits", "processx", "promises", "ps", "purrr", "raster", "Rcpp", "reshape2", "rgdal", "rgeos", "rlang", "rmarkdown", "roxygen2", "rstudioapi", "rvest", "scales", "sf", "shiny", "sp", "spatial", "spData", "stringi", "survival", "sys", "tibble", "tidyr", "tidyselect", "tinytex", "units", "vctrs", "withr", "xfun", "xml2", "yaml"))
version
version
setwd("~/Documents/Msc/Second Semester/Data Science/Week 1/Analysis")
setwd("~/Documents/Msc/Second Semester/Data Science/Week 1/Homework/LifeExpectancy")
library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
library(gapminder)
install.packages("gapminder")
library(gapminder)
gapminder_unfiltered %>%
group_by(year) %>%
filter(lifeExp== max(lifeExp)) %>%
ungroup() %>%
select(year, country, lifeExp) %>%
arrange(year) %>%
sumdat
gapminder_unfiltered %>%
group_by(year) %>%
filter(lifeExp== max(lifeExp)) %>%
ungroup() %>%
select(year, country, lifeExp) %>%
arrange(year) %>% ->
gapminder_unfiltered %>%
group_by(year) %>%
filter(lifeExp== max(lifeExp)) %>%
ungroup() %>%
select(year, country, lifeExp) %>%
arrange(year) ->
sumdat
gapminder_unfiltered %>%
group_by(year) %>%
filter(lifeExp== max(lifeExp)) %>%
ungroup() %>%
select(year, country, lifeExp) %>%
arrange(year) ->
sumdat
